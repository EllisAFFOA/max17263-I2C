
MAX17263_I2C_Test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000009fa  2**0
                  ALLOC, LOAD, DATA
  1 .text         000000c4  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000002f  00000000  00000000  000009fa  2**0
                  CONTENTS, READONLY
  3 .stack.descriptors.hdr 00000054  00000000  00000000  00000a29  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000001b0  00000000  00000000  00000a80  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002b2a  00000000  00000000  00000c30  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000ea0  00000000  00000000  0000375a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000f26  00000000  00000000  000045fa  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000035c  00000000  00000000  00005520  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004f9  00000000  00000000  0000587c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000e82  00000000  00000000  00005d75  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000130  00000000  00000000  00006bf7  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  00000978  00000978  000009ec  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00006d28  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.i2c_init 00000020  000008ec  000008ec  00000960  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.i2c_start 00000068  0000047e  0000047e  000004f2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.i2c_write 00000028  0000080a  0000080a  0000087e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.i2c_readACK 00000026  00000832  00000832  000008a6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.i2c_readNACK 00000026  00000858  00000858  000008cc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.i2c_stop 00000010  00000942  00000942  000009b6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.i2c_controller_transmit 0000005e  000004e6  000004e6  0000055a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.i2c_controller_receive 00000072  0000040c  0000040c  00000480  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.main    000000ce  00000200  00000200  00000274  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.max_readRegister 00000040  000006c2  000006c2  00000736  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.max_writeRegister 0000002e  000007b2  000007b2  00000826  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.max_writeAndVerifyRegister 0000003e  00000702  00000702  00000776  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.max_debugRead 00000034  0000077e  0000077e  000007f2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.max_debugWrite 00000026  0000087e  0000087e  000008f2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.max_debugDataStruct 0000009e  0000036e  0000036e  000003e2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .text.max_debugFuelGauge 0000005c  00000544  00000544  000005b8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 .text.max_debugEEPROM 000000a0  000002ce  000002ce  00000342  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .text.max_checkPOR 0000000c  00000960  00000960  000009d4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 .text.max_initLED 00000020  0000090c  0000090c  00000980  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 .text.max_readFuelGauge 0000002a  000007e0  000007e0  00000854  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 .text.max_checkCycles 0000003e  00000740  00000740  000007b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 35 .text.max_eepromSaveParameters 00000048  000005f2  000005f2  00000666  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 36 .text.max_saveLearnedParameters 00000044  0000063a  0000063a  000006ae  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 37 .text.max_eepromLoadParameters 00000052  000005a0  000005a0  00000614  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 38 .text.max_loadConfig 0000013c  000000c4  000000c4  00000138  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 39 .text.libgcc.div 00000044  0000067e  0000067e  000006f2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 40 .text.__dummy_fini 00000002  00000980  00000980  000009f4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 41 .text.__dummy_funcs_on_exit 00000002  00000982  00000982  000009f6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 42 .text.__dummy_simulator_exit 00000002  00000984  00000984  000009f8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 43 .text.exit    00000016  0000092c  0000092c  000009a0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 44 .text._Exit   00000004  0000097c  0000097c  000009f0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 45 .text.avrlibc 0000000e  00000952  00000952  000009c6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 46 .text.avrlibc 0000000c  0000096c  0000096c  000009e0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 47 .text.avrlibc 00000024  000008a4  000008a4  00000918  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 48 .text.avrlibc 00000024  000008c8  000008c8  0000093c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 56 00 	jmp	0xac	; 0xac <__ctors_end>
   4:	0c 94 bc 04 	jmp	0x978	; 0x978 <__bad_interrupt>
   8:	0c 94 bc 04 	jmp	0x978	; 0x978 <__bad_interrupt>
   c:	0c 94 bc 04 	jmp	0x978	; 0x978 <__bad_interrupt>
  10:	0c 94 bc 04 	jmp	0x978	; 0x978 <__bad_interrupt>
  14:	0c 94 bc 04 	jmp	0x978	; 0x978 <__bad_interrupt>
  18:	0c 94 bc 04 	jmp	0x978	; 0x978 <__bad_interrupt>
  1c:	0c 94 bc 04 	jmp	0x978	; 0x978 <__bad_interrupt>
  20:	0c 94 bc 04 	jmp	0x978	; 0x978 <__bad_interrupt>
  24:	0c 94 bc 04 	jmp	0x978	; 0x978 <__bad_interrupt>
  28:	0c 94 bc 04 	jmp	0x978	; 0x978 <__bad_interrupt>
  2c:	0c 94 bc 04 	jmp	0x978	; 0x978 <__bad_interrupt>
  30:	0c 94 bc 04 	jmp	0x978	; 0x978 <__bad_interrupt>
  34:	0c 94 bc 04 	jmp	0x978	; 0x978 <__bad_interrupt>
  38:	0c 94 bc 04 	jmp	0x978	; 0x978 <__bad_interrupt>
  3c:	0c 94 bc 04 	jmp	0x978	; 0x978 <__bad_interrupt>
  40:	0c 94 bc 04 	jmp	0x978	; 0x978 <__bad_interrupt>
  44:	0c 94 bc 04 	jmp	0x978	; 0x978 <__bad_interrupt>
  48:	0c 94 bc 04 	jmp	0x978	; 0x978 <__bad_interrupt>
  4c:	0c 94 bc 04 	jmp	0x978	; 0x978 <__bad_interrupt>
  50:	0c 94 bc 04 	jmp	0x978	; 0x978 <__bad_interrupt>
  54:	0c 94 bc 04 	jmp	0x978	; 0x978 <__bad_interrupt>
  58:	0c 94 bc 04 	jmp	0x978	; 0x978 <__bad_interrupt>
  5c:	0c 94 bc 04 	jmp	0x978	; 0x978 <__bad_interrupt>
  60:	0c 94 bc 04 	jmp	0x978	; 0x978 <__bad_interrupt>
  64:	0c 94 bc 04 	jmp	0x978	; 0x978 <__bad_interrupt>
  68:	0c 94 bc 04 	jmp	0x978	; 0x978 <__bad_interrupt>
  6c:	0c 94 bc 04 	jmp	0x978	; 0x978 <__bad_interrupt>
  70:	0c 94 bc 04 	jmp	0x978	; 0x978 <__bad_interrupt>
  74:	0c 94 bc 04 	jmp	0x978	; 0x978 <__bad_interrupt>
  78:	0c 94 bc 04 	jmp	0x978	; 0x978 <__bad_interrupt>
  7c:	0c 94 bc 04 	jmp	0x978	; 0x978 <__bad_interrupt>
  80:	0c 94 bc 04 	jmp	0x978	; 0x978 <__bad_interrupt>
  84:	0c 94 bc 04 	jmp	0x978	; 0x978 <__bad_interrupt>
  88:	0c 94 bc 04 	jmp	0x978	; 0x978 <__bad_interrupt>
  8c:	0c 94 bc 04 	jmp	0x978	; 0x978 <__bad_interrupt>
  90:	0c 94 bc 04 	jmp	0x978	; 0x978 <__bad_interrupt>
  94:	0c 94 bc 04 	jmp	0x978	; 0x978 <__bad_interrupt>
  98:	0c 94 bc 04 	jmp	0x978	; 0x978 <__bad_interrupt>
  9c:	0c 94 bc 04 	jmp	0x978	; 0x978 <__bad_interrupt>
  a0:	0c 94 bc 04 	jmp	0x978	; 0x978 <__bad_interrupt>
  a4:	0c 94 bc 04 	jmp	0x978	; 0x978 <__bad_interrupt>
  a8:	0c 94 bc 04 	jmp	0x978	; 0x978 <__bad_interrupt>

000000ac <__ctors_end>:
  ac:	11 24       	eor	r1, r1
  ae:	1f be       	out	0x3f, r1	; 63
  b0:	cf ef       	ldi	r28, 0xFF	; 255
  b2:	da e0       	ldi	r29, 0x0A	; 10
  b4:	de bf       	out	0x3e, r29	; 62
  b6:	cd bf       	out	0x3d, r28	; 61
  b8:	0e 94 00 01 	call	0x200	; 0x200 <main>
  bc:	0c 94 96 04 	jmp	0x92c	; 0x92c <exit>

000000c0 <_exit>:
  c0:	f8 94       	cli

000000c2 <__stop_program>:
  c2:	ff cf       	rjmp	.-2      	; 0xc2 <__stop_program>

Disassembly of section .text:

00000978 <__bad_interrupt>:
 978:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.i2c_init:

000008ec <i2c_init>:
 8ec:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 8f0:	0e 94 3f 03 	call	0x67e	; 0x67e <__udivmodsi4>
 8f4:	da 01       	movw	r26, r20
 8f6:	c9 01       	movw	r24, r18
 8f8:	40 97       	sbiw	r24, 0x10	; 16
 8fa:	a1 09       	sbc	r26, r1
 8fc:	b1 09       	sbc	r27, r1
 8fe:	b6 95       	lsr	r27
 900:	a7 95       	ror	r26
 902:	97 95       	ror	r25
 904:	87 95       	ror	r24
 906:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
 90a:	08 95       	ret

Disassembly of section .text.i2c_start:

0000047e <i2c_start>:
 47e:	94 ea       	ldi	r25, 0xA4	; 164
 480:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 484:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 488:	99 23       	and	r25, r25
 48a:	e4 f7       	brge	.-8      	; 0x484 <i2c_start+0x6>
 48c:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 490:	98 7f       	andi	r25, 0xF8	; 248
 492:	98 30       	cpi	r25, 0x08	; 8
 494:	49 f0       	breq	.+18     	; 0x4a8 <i2c_start+0x2a>
 496:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 49a:	98 7f       	andi	r25, 0xF8	; 248
 49c:	90 31       	cpi	r25, 0x10	; 16
 49e:	21 f0       	breq	.+8      	; 0x4a8 <i2c_start+0x2a>
 4a0:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 4a4:	88 7f       	andi	r24, 0xF8	; 248
 4a6:	08 95       	ret
 4a8:	90 e0       	ldi	r25, 0x00	; 0
 4aa:	88 0f       	add	r24, r24
 4ac:	99 1f       	adc	r25, r25
 4ae:	86 2b       	or	r24, r22
 4b0:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
 4b4:	84 e8       	ldi	r24, 0x84	; 132
 4b6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 4ba:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 4be:	88 23       	and	r24, r24
 4c0:	e4 f7       	brge	.-8      	; 0x4ba <i2c_start+0x3c>
 4c2:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 4c6:	88 7f       	andi	r24, 0xF8	; 248
 4c8:	88 31       	cpi	r24, 0x18	; 24
 4ca:	49 f0       	breq	.+18     	; 0x4de <i2c_start+0x60>
 4cc:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 4d0:	88 7f       	andi	r24, 0xF8	; 248
 4d2:	80 34       	cpi	r24, 0x40	; 64
 4d4:	31 f0       	breq	.+12     	; 0x4e2 <i2c_start+0x64>
 4d6:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 4da:	88 7f       	andi	r24, 0xF8	; 248
 4dc:	08 95       	ret
 4de:	80 e0       	ldi	r24, 0x00	; 0
 4e0:	08 95       	ret
 4e2:	80 e0       	ldi	r24, 0x00	; 0
 4e4:	08 95       	ret

Disassembly of section .text.i2c_write:

0000080a <i2c_write>:
 80a:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
 80e:	84 e8       	ldi	r24, 0x84	; 132
 810:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 814:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 818:	88 23       	and	r24, r24
 81a:	e4 f7       	brge	.-8      	; 0x814 <i2c_write+0xa>
 81c:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 820:	88 7f       	andi	r24, 0xF8	; 248
 822:	88 32       	cpi	r24, 0x28	; 40
 824:	21 f0       	breq	.+8      	; 0x82e <i2c_write+0x24>
 826:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 82a:	88 7f       	andi	r24, 0xF8	; 248
 82c:	08 95       	ret
 82e:	80 e0       	ldi	r24, 0x00	; 0
 830:	08 95       	ret

Disassembly of section .text.i2c_readACK:

00000832 <i2c_readACK>:
 832:	84 ec       	ldi	r24, 0xC4	; 196
 834:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 838:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 83c:	88 23       	and	r24, r24
 83e:	e4 f7       	brge	.-8      	; 0x838 <i2c_readACK+0x6>
 840:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 844:	88 7f       	andi	r24, 0xF8	; 248
 846:	80 35       	cpi	r24, 0x50	; 80
 848:	21 f0       	breq	.+8      	; 0x852 <i2c_readACK+0x20>
 84a:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 84e:	88 7f       	andi	r24, 0xF8	; 248
 850:	08 95       	ret
 852:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
 856:	08 95       	ret

Disassembly of section .text.i2c_readNACK:

00000858 <i2c_readNACK>:
 858:	84 e8       	ldi	r24, 0x84	; 132
 85a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 85e:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 862:	88 23       	and	r24, r24
 864:	e4 f7       	brge	.-8      	; 0x85e <i2c_readNACK+0x6>
 866:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 86a:	88 7f       	andi	r24, 0xF8	; 248
 86c:	88 35       	cpi	r24, 0x58	; 88
 86e:	21 f0       	breq	.+8      	; 0x878 <i2c_readNACK+0x20>
 870:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 874:	88 7f       	andi	r24, 0xF8	; 248
 876:	08 95       	ret
 878:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
 87c:	08 95       	ret

Disassembly of section .text.i2c_stop:

00000942 <i2c_stop>:
 942:	84 e9       	ldi	r24, 0x94	; 148
 944:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 948:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 94c:	84 fd       	sbrc	r24, 4
 94e:	fc cf       	rjmp	.-8      	; 0x948 <i2c_stop+0x6>
 950:	08 95       	ret

Disassembly of section .text.i2c_controller_transmit:

000004e6 <i2c_controller_transmit>:
 4e6:	ff 92       	push	r15
 4e8:	0f 93       	push	r16
 4ea:	1f 93       	push	r17
 4ec:	cf 93       	push	r28
 4ee:	df 93       	push	r29
 4f0:	8b 01       	movw	r16, r22
 4f2:	d4 2f       	mov	r29, r20
 4f4:	f2 2e       	mov	r15, r18
 4f6:	60 e0       	ldi	r22, 0x00	; 0
 4f8:	0e 94 3f 02 	call	0x47e	; 0x47e <i2c_start>
 4fc:	81 11       	cpse	r24, r1
 4fe:	1c c0       	rjmp	.+56     	; 0x538 <i2c_controller_transmit+0x52>
 500:	d2 30       	cpi	r29, 0x02	; 2
 502:	48 f4       	brcc	.+18     	; 0x516 <i2c_controller_transmit+0x30>
 504:	0c c0       	rjmp	.+24     	; 0x51e <i2c_controller_transmit+0x38>
 506:	f8 01       	movw	r30, r16
 508:	ec 0f       	add	r30, r28
 50a:	f1 1d       	adc	r31, r1
 50c:	80 81       	ld	r24, Z
 50e:	0e 94 05 04 	call	0x80a	; 0x80a <i2c_write>
 512:	cf 5f       	subi	r28, 0xFF	; 255
 514:	01 c0       	rjmp	.+2      	; 0x518 <i2c_controller_transmit+0x32>
 516:	c0 e0       	ldi	r28, 0x00	; 0
 518:	cd 17       	cp	r28, r29
 51a:	a8 f3       	brcs	.-22     	; 0x506 <i2c_controller_transmit+0x20>
 51c:	04 c0       	rjmp	.+8      	; 0x526 <i2c_controller_transmit+0x40>
 51e:	f8 01       	movw	r30, r16
 520:	80 81       	ld	r24, Z
 522:	0e 94 05 04 	call	0x80a	; 0x80a <i2c_write>
 526:	81 11       	cpse	r24, r1
 528:	07 c0       	rjmp	.+14     	; 0x538 <i2c_controller_transmit+0x52>
 52a:	f1 10       	cpse	r15, r1
 52c:	04 c0       	rjmp	.+8      	; 0x536 <i2c_controller_transmit+0x50>
 52e:	0e 94 a1 04 	call	0x942	; 0x942 <i2c_stop>
 532:	80 e0       	ldi	r24, 0x00	; 0
 534:	01 c0       	rjmp	.+2      	; 0x538 <i2c_controller_transmit+0x52>
 536:	80 e0       	ldi	r24, 0x00	; 0
 538:	df 91       	pop	r29
 53a:	cf 91       	pop	r28
 53c:	1f 91       	pop	r17
 53e:	0f 91       	pop	r16
 540:	ff 90       	pop	r15
 542:	08 95       	ret

Disassembly of section .text.i2c_controller_receive:

0000040c <i2c_controller_receive>:
 40c:	ef 92       	push	r14
 40e:	ff 92       	push	r15
 410:	0f 93       	push	r16
 412:	1f 93       	push	r17
 414:	cf 93       	push	r28
 416:	df 93       	push	r29
 418:	8b 01       	movw	r16, r22
 41a:	d4 2f       	mov	r29, r20
 41c:	61 e0       	ldi	r22, 0x01	; 1
 41e:	0e 94 3f 02 	call	0x47e	; 0x47e <i2c_start>
 422:	88 23       	and	r24, r24
 424:	71 f0       	breq	.+28     	; 0x442 <i2c_controller_receive+0x36>
 426:	68 2f       	mov	r22, r24
 428:	70 e0       	ldi	r23, 0x00	; 0
 42a:	80 e0       	ldi	r24, 0x00	; 0
 42c:	90 e0       	ldi	r25, 0x00	; 0
 42e:	20 c0       	rjmp	.+64     	; 0x470 <i2c_controller_receive+0x64>
 430:	78 01       	movw	r14, r16
 432:	ec 0e       	add	r14, r28
 434:	f1 1c       	adc	r15, r1
 436:	0e 94 19 04 	call	0x832	; 0x832 <i2c_readACK>
 43a:	f7 01       	movw	r30, r14
 43c:	80 83       	st	Z, r24
 43e:	cf 5f       	subi	r28, 0xFF	; 255
 440:	01 c0       	rjmp	.+2      	; 0x444 <i2c_controller_receive+0x38>
 442:	c0 e0       	ldi	r28, 0x00	; 0
 444:	2c 2f       	mov	r18, r28
 446:	30 e0       	ldi	r19, 0x00	; 0
 448:	8d 2f       	mov	r24, r29
 44a:	90 e0       	ldi	r25, 0x00	; 0
 44c:	01 97       	sbiw	r24, 0x01	; 1
 44e:	28 17       	cp	r18, r24
 450:	39 07       	cpc	r19, r25
 452:	74 f3       	brlt	.-36     	; 0x430 <i2c_controller_receive+0x24>
 454:	8d 2f       	mov	r24, r29
 456:	90 e0       	ldi	r25, 0x00	; 0
 458:	01 97       	sbiw	r24, 0x01	; 1
 45a:	e8 01       	movw	r28, r16
 45c:	c8 0f       	add	r28, r24
 45e:	d9 1f       	adc	r29, r25
 460:	0e 94 2c 04 	call	0x858	; 0x858 <i2c_readNACK>
 464:	88 83       	st	Y, r24
 466:	0e 94 a1 04 	call	0x942	; 0x942 <i2c_stop>
 46a:	60 e0       	ldi	r22, 0x00	; 0
 46c:	70 e0       	ldi	r23, 0x00	; 0
 46e:	cb 01       	movw	r24, r22
 470:	df 91       	pop	r29
 472:	cf 91       	pop	r28
 474:	1f 91       	pop	r17
 476:	0f 91       	pop	r16
 478:	ff 90       	pop	r15
 47a:	ef 90       	pop	r14
 47c:	08 95       	ret

Disassembly of section .text.main:

00000200 <main>:
#include "i2c.h"
#include "max17263.h"
#include "max17263_regmap.h"


int main(void){
 200:	cf 93       	push	r28
 202:	df 93       	push	r29
 204:	cd b7       	in	r28, 0x3d	; 61
 206:	de b7       	in	r29, 0x3e	; 62
 208:	6e 97       	sbiw	r28, 0x1e	; 30
 20a:	0f b6       	in	r0, 0x3f	; 63
 20c:	f8 94       	cli
 20e:	de bf       	out	0x3e, r29	; 62
 210:	0f be       	out	0x3f, r0	; 63
 212:	cd bf       	out	0x3d, r28	; 61
	
	uint16_t data;
	Max17263_t max;
	
	// disable pullups SDA, SCL
	DDRD  |= ((1 << PORTD0) | (1 << PORTD1));
 214:	8a b1       	in	r24, 0x0a	; 10
 216:	83 60       	ori	r24, 0x03	; 3
 218:	8a b9       	out	0x0a, r24	; 10
	//PORTD |= ((1 << PORTD0) | (1 << PORTD1));
	PORTD &= ~((1 << PORTD0) | (1 << PORTD1));
 21a:	8b b1       	in	r24, 0x0b	; 11
 21c:	8c 7f       	andi	r24, 0xFC	; 252
 21e:	8b b9       	out	0x0b, r24	; 11
	DDRD  &= ~((1 << PORTD0) | (1 << PORTD1));
 220:	8a b1       	in	r24, 0x0a	; 10
 222:	8c 7f       	andi	r24, 0xFC	; 252
 224:	8a b9       	out	0x0a, r24	; 10

	i2c_init(F_CPU, I2C_SCL_100KHZ);
 226:	20 ea       	ldi	r18, 0xA0	; 160
 228:	36 e8       	ldi	r19, 0x86	; 134
 22a:	41 e0       	ldi	r20, 0x01	; 1
 22c:	50 e0       	ldi	r21, 0x00	; 0
 22e:	60 e0       	ldi	r22, 0x00	; 0
 230:	72 e1       	ldi	r23, 0x12	; 18
 232:	8a e7       	ldi	r24, 0x7A	; 122
 234:	90 e0       	ldi	r25, 0x00	; 0
 236:	0e 94 76 04 	call	0x8ec	; 0x8ec <i2c_init>
	
	if (DEBUG)
		max_debugWrite(DEBUG_ADDR, DEBUG_STARTUP_CODE);
 23a:	6a ea       	ldi	r22, 0xAA	; 170
 23c:	7a ea       	ldi	r23, 0xAA	; 170
 23e:	89 e6       	ldi	r24, 0x69	; 105
 240:	0e 94 3f 04 	call	0x87e	; 0x87e <max_debugWrite>
	
	max.config.designcap = 0x0960;
 244:	80 e6       	ldi	r24, 0x60	; 96
 246:	99 e0       	ldi	r25, 0x09	; 9
 248:	9a 83       	std	Y+2, r25	; 0x02
 24a:	89 83       	std	Y+1, r24	; 0x01
	max.config.ichgterm = IchgTerm_DEF;
 24c:	80 e4       	ldi	r24, 0x40	; 64
 24e:	96 e0       	ldi	r25, 0x06	; 6
 250:	9c 83       	std	Y+4, r25	; 0x04
 252:	8b 83       	std	Y+3, r24	; 0x03
	max.config.vempty = Vempty_DEF;
 254:	81 e6       	ldi	r24, 0x61	; 97
 256:	95 ea       	ldi	r25, 0xA5	; 165
 258:	9e 83       	std	Y+6, r25	; 0x06
 25a:	8d 83       	std	Y+5, r24	; 0x05
	max.config.modelcfg = REFRESH | R100;
 25c:	80 e0       	ldi	r24, 0x00	; 0
 25e:	90 ea       	ldi	r25, 0xA0	; 160
 260:	98 87       	std	Y+8, r25	; 0x08
 262:	8f 83       	std	Y+7, r24	; 0x07
	max_loadConfig(&max);
 264:	ce 01       	movw	r24, r28
 266:	01 96       	adiw	r24, 0x01	; 1
 268:	0e 94 62 00 	call	0xc4	; 0xc4 <__data_load_end>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 26c:	2f ef       	ldi	r18, 0xFF	; 255
 26e:	80 e7       	ldi	r24, 0x70	; 112
 270:	92 e0       	ldi	r25, 0x02	; 2
 272:	21 50       	subi	r18, 0x01	; 1
 274:	80 40       	sbci	r24, 0x00	; 0
 276:	90 40       	sbci	r25, 0x00	; 0
 278:	e1 f7       	brne	.-8      	; 0x272 <main+0x72>
 27a:	00 c0       	rjmp	.+0      	; 0x27c <main+0x7c>
 27c:	00 00       	nop
	
	
	while(1){
		
		// power on reset has occured	
		if (max_checkPOR()) {
 27e:	0e 94 b0 04 	call	0x960	; 0x960 <max_checkPOR>
 282:	89 2b       	or	r24, r25
 284:	21 f0       	breq	.+8      	; 0x28e <main+0x8e>
			
			// configure
			max_loadConfig(&max);
 286:	ce 01       	movw	r24, r28
 288:	01 96       	adiw	r24, 0x01	; 1
 28a:	0e 94 62 00 	call	0xc4	; 0xc4 <__data_load_end>
		}
		
		// save learned parameters if bit 6 of Cycles Register has toggled
		if (max_checkCycles(&max)) {
 28e:	ce 01       	movw	r24, r28
 290:	01 96       	adiw	r24, 0x01	; 1
 292:	0e 94 a0 03 	call	0x740	; 0x740 <max_checkCycles>
 296:	88 23       	and	r24, r24
 298:	21 f0       	breq	.+8      	; 0x2a2 <main+0xa2>
			max_saveLearnedParameters(&max);
 29a:	ce 01       	movw	r24, r28
 29c:	01 96       	adiw	r24, 0x01	; 1
 29e:	0e 94 1d 03 	call	0x63a	; 0x63a <max_saveLearnedParameters>
		}
		
		max_readFuelGauge(&max);
 2a2:	ce 01       	movw	r24, r28
 2a4:	01 96       	adiw	r24, 0x01	; 1
 2a6:	0e 94 f0 03 	call	0x7e0	; 0x7e0 <max_readFuelGauge>
		
		if (DEBUG) {
			max_debugEEPROM();
 2aa:	0e 94 67 01 	call	0x2ce	; 0x2ce <max_debugEEPROM>
			max_debugDataStruct(&max);
 2ae:	ce 01       	movw	r24, r28
 2b0:	01 96       	adiw	r24, 0x01	; 1
 2b2:	0e 94 b7 01 	call	0x36e	; 0x36e <max_debugDataStruct>
		}
		
		if (DEBUG_FUEL_GAUGE) {
			max_debugFuelGauge();
 2b6:	0e 94 a2 02 	call	0x544	; 0x544 <max_debugFuelGauge>
 2ba:	2f ef       	ldi	r18, 0xFF	; 255
 2bc:	89 e6       	ldi	r24, 0x69	; 105
 2be:	98 e1       	ldi	r25, 0x18	; 24
 2c0:	21 50       	subi	r18, 0x01	; 1
 2c2:	80 40       	sbci	r24, 0x00	; 0
 2c4:	90 40       	sbci	r25, 0x00	; 0
 2c6:	e1 f7       	brne	.-8      	; 0x2c0 <main+0xc0>
 2c8:	00 c0       	rjmp	.+0      	; 0x2ca <main+0xca>
 2ca:	00 00       	nop
 2cc:	d8 cf       	rjmp	.-80     	; 0x27e <main+0x7e>

Disassembly of section .text.max_readRegister:

000006c2 <max_readRegister>:
	// disable custom led control
	max_writeRegister(CustLED_ADDR, CustLED_DEF);
	max_writeRegister(LEDCfg3_ADDR, LEDCfg3_DEF);
	
	_delay_ms(1000);
}
 6c2:	cf 93       	push	r28
 6c4:	df 93       	push	r29
 6c6:	00 d0       	rcall	.+0      	; 0x6c8 <max_readRegister+0x6>
 6c8:	cd b7       	in	r28, 0x3d	; 61
 6ca:	de b7       	in	r29, 0x3e	; 62
 6cc:	89 83       	std	Y+1, r24	; 0x01
 6ce:	21 e0       	ldi	r18, 0x01	; 1
 6d0:	41 e0       	ldi	r20, 0x01	; 1
 6d2:	be 01       	movw	r22, r28
 6d4:	6f 5f       	subi	r22, 0xFF	; 255
 6d6:	7f 4f       	sbci	r23, 0xFF	; 255
 6d8:	86 e3       	ldi	r24, 0x36	; 54
 6da:	0e 94 73 02 	call	0x4e6	; 0x4e6 <i2c_controller_transmit>
 6de:	42 e0       	ldi	r20, 0x02	; 2
 6e0:	be 01       	movw	r22, r28
 6e2:	6f 5f       	subi	r22, 0xFF	; 255
 6e4:	7f 4f       	sbci	r23, 0xFF	; 255
 6e6:	86 e3       	ldi	r24, 0x36	; 54
 6e8:	0e 94 06 02 	call	0x40c	; 0x40c <i2c_controller_receive>
 6ec:	8a 81       	ldd	r24, Y+2	; 0x02
 6ee:	90 e0       	ldi	r25, 0x00	; 0
 6f0:	98 2f       	mov	r25, r24
 6f2:	88 27       	eor	r24, r24
 6f4:	29 81       	ldd	r18, Y+1	; 0x01
 6f6:	82 2b       	or	r24, r18
 6f8:	0f 90       	pop	r0
 6fa:	0f 90       	pop	r0
 6fc:	df 91       	pop	r29
 6fe:	cf 91       	pop	r28
 700:	08 95       	ret

Disassembly of section .text.max_writeRegister:

000007b2 <max_writeRegister>:
 7b2:	cf 93       	push	r28
 7b4:	df 93       	push	r29
 7b6:	00 d0       	rcall	.+0      	; 0x7b8 <max_writeRegister+0x6>
 7b8:	0f 92       	push	r0
 7ba:	cd b7       	in	r28, 0x3d	; 61
 7bc:	de b7       	in	r29, 0x3e	; 62
 7be:	89 83       	std	Y+1, r24	; 0x01
 7c0:	6a 83       	std	Y+2, r22	; 0x02
 7c2:	7b 83       	std	Y+3, r23	; 0x03
 7c4:	20 e0       	ldi	r18, 0x00	; 0
 7c6:	43 e0       	ldi	r20, 0x03	; 3
 7c8:	be 01       	movw	r22, r28
 7ca:	6f 5f       	subi	r22, 0xFF	; 255
 7cc:	7f 4f       	sbci	r23, 0xFF	; 255
 7ce:	86 e3       	ldi	r24, 0x36	; 54
 7d0:	0e 94 73 02 	call	0x4e6	; 0x4e6 <i2c_controller_transmit>
 7d4:	0f 90       	pop	r0
 7d6:	0f 90       	pop	r0
 7d8:	0f 90       	pop	r0
 7da:	df 91       	pop	r29
 7dc:	cf 91       	pop	r28
 7de:	08 95       	ret

Disassembly of section .text.max_writeAndVerifyRegister:

00000702 <max_writeAndVerifyRegister>:
 702:	0f 93       	push	r16
 704:	1f 93       	push	r17
 706:	cf 93       	push	r28
 708:	df 93       	push	r29
 70a:	d8 2f       	mov	r29, r24
 70c:	8b 01       	movw	r16, r22
 70e:	c0 e0       	ldi	r28, 0x00	; 0
 710:	b8 01       	movw	r22, r16
 712:	8d 2f       	mov	r24, r29
 714:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <max_writeRegister>
 718:	8f ec       	ldi	r24, 0xCF	; 207
 71a:	97 e0       	ldi	r25, 0x07	; 7
 71c:	01 97       	sbiw	r24, 0x01	; 1
 71e:	f1 f7       	brne	.-4      	; 0x71c <max_writeAndVerifyRegister+0x1a>
 720:	00 c0       	rjmp	.+0      	; 0x722 <max_writeAndVerifyRegister+0x20>
 722:	00 00       	nop
 724:	8d 2f       	mov	r24, r29
 726:	0e 94 61 03 	call	0x6c2	; 0x6c2 <max_readRegister>
 72a:	cf 5f       	subi	r28, 0xFF	; 255
 72c:	08 17       	cp	r16, r24
 72e:	19 07       	cpc	r17, r25
 730:	11 f0       	breq	.+4      	; 0x736 <max_writeAndVerifyRegister+0x34>
 732:	c3 30       	cpi	r28, 0x03	; 3
 734:	68 f3       	brcs	.-38     	; 0x710 <max_writeAndVerifyRegister+0xe>
 736:	df 91       	pop	r29
 738:	cf 91       	pop	r28
 73a:	1f 91       	pop	r17
 73c:	0f 91       	pop	r16
 73e:	08 95       	ret

Disassembly of section .text.max_debugRead:

0000077e <max_debugRead>:
 77e:	1f 93       	push	r17
 780:	cf 93       	push	r28
 782:	df 93       	push	r29
 784:	00 d0       	rcall	.+0      	; 0x786 <max_debugRead+0x8>
 786:	cd b7       	in	r28, 0x3d	; 61
 788:	de b7       	in	r29, 0x3e	; 62
 78a:	18 2f       	mov	r17, r24
 78c:	86 2f       	mov	r24, r22
 78e:	0e 94 61 03 	call	0x6c2	; 0x6c2 <max_readRegister>
 792:	89 83       	std	Y+1, r24	; 0x01
 794:	9a 83       	std	Y+2, r25	; 0x02
 796:	20 e0       	ldi	r18, 0x00	; 0
 798:	42 e0       	ldi	r20, 0x02	; 2
 79a:	be 01       	movw	r22, r28
 79c:	6f 5f       	subi	r22, 0xFF	; 255
 79e:	7f 4f       	sbci	r23, 0xFF	; 255
 7a0:	81 2f       	mov	r24, r17
 7a2:	0e 94 73 02 	call	0x4e6	; 0x4e6 <i2c_controller_transmit>
 7a6:	0f 90       	pop	r0
 7a8:	0f 90       	pop	r0
 7aa:	df 91       	pop	r29
 7ac:	cf 91       	pop	r28
 7ae:	1f 91       	pop	r17
 7b0:	08 95       	ret

Disassembly of section .text.max_debugWrite:

0000087e <max_debugWrite>:
 87e:	cf 93       	push	r28
 880:	df 93       	push	r29
 882:	00 d0       	rcall	.+0      	; 0x884 <max_debugWrite+0x6>
 884:	cd b7       	in	r28, 0x3d	; 61
 886:	de b7       	in	r29, 0x3e	; 62
 888:	69 83       	std	Y+1, r22	; 0x01
 88a:	7a 83       	std	Y+2, r23	; 0x02
 88c:	20 e0       	ldi	r18, 0x00	; 0
 88e:	42 e0       	ldi	r20, 0x02	; 2
 890:	be 01       	movw	r22, r28
 892:	6f 5f       	subi	r22, 0xFF	; 255
 894:	7f 4f       	sbci	r23, 0xFF	; 255
 896:	0e 94 73 02 	call	0x4e6	; 0x4e6 <i2c_controller_transmit>
 89a:	0f 90       	pop	r0
 89c:	0f 90       	pop	r0
 89e:	df 91       	pop	r29
 8a0:	cf 91       	pop	r28
 8a2:	08 95       	ret

Disassembly of section .text.max_debugDataStruct:

0000036e <max_debugDataStruct>:
 36e:	cf 93       	push	r28
 370:	df 93       	push	r29
 372:	cd b7       	in	r28, 0x3d	; 61
 374:	de b7       	in	r29, 0x3e	; 62
 376:	6a 97       	sbiw	r28, 0x1a	; 26
 378:	0f b6       	in	r0, 0x3f	; 63
 37a:	f8 94       	cli
 37c:	de bf       	out	0x3e, r29	; 62
 37e:	0f be       	out	0x3f, r0	; 63
 380:	cd bf       	out	0x3d, r28	; 61
 382:	fc 01       	movw	r30, r24
 384:	8c ec       	ldi	r24, 0xCC	; 204
 386:	89 83       	std	Y+1, r24	; 0x01
 388:	8a 83       	std	Y+2, r24	; 0x02
 38a:	80 81       	ld	r24, Z
 38c:	8b 83       	std	Y+3, r24	; 0x03
 38e:	81 81       	ldd	r24, Z+1	; 0x01
 390:	8c 83       	std	Y+4, r24	; 0x04
 392:	82 81       	ldd	r24, Z+2	; 0x02
 394:	8d 83       	std	Y+5, r24	; 0x05
 396:	83 81       	ldd	r24, Z+3	; 0x03
 398:	8e 83       	std	Y+6, r24	; 0x06
 39a:	84 81       	ldd	r24, Z+4	; 0x04
 39c:	8f 83       	std	Y+7, r24	; 0x07
 39e:	85 81       	ldd	r24, Z+5	; 0x05
 3a0:	88 87       	std	Y+8, r24	; 0x08
 3a2:	86 81       	ldd	r24, Z+6	; 0x06
 3a4:	89 87       	std	Y+9, r24	; 0x09
 3a6:	87 81       	ldd	r24, Z+7	; 0x07
 3a8:	8a 87       	std	Y+10, r24	; 0x0a
 3aa:	80 85       	ldd	r24, Z+8	; 0x08
 3ac:	8b 87       	std	Y+11, r24	; 0x0b
 3ae:	81 85       	ldd	r24, Z+9	; 0x09
 3b0:	8c 87       	std	Y+12, r24	; 0x0c
 3b2:	82 85       	ldd	r24, Z+10	; 0x0a
 3b4:	8d 87       	std	Y+13, r24	; 0x0d
 3b6:	83 85       	ldd	r24, Z+11	; 0x0b
 3b8:	8e 87       	std	Y+14, r24	; 0x0e
 3ba:	84 85       	ldd	r24, Z+12	; 0x0c
 3bc:	8f 87       	std	Y+15, r24	; 0x0f
 3be:	85 85       	ldd	r24, Z+13	; 0x0d
 3c0:	88 8b       	std	Y+16, r24	; 0x10
 3c2:	86 85       	ldd	r24, Z+14	; 0x0e
 3c4:	89 8b       	std	Y+17, r24	; 0x11
 3c6:	87 85       	ldd	r24, Z+15	; 0x0f
 3c8:	8a 8b       	std	Y+18, r24	; 0x12
 3ca:	80 89       	ldd	r24, Z+16	; 0x10
 3cc:	8b 8b       	std	Y+19, r24	; 0x13
 3ce:	81 89       	ldd	r24, Z+17	; 0x11
 3d0:	8c 8b       	std	Y+20, r24	; 0x14
 3d2:	82 89       	ldd	r24, Z+18	; 0x12
 3d4:	8d 8b       	std	Y+21, r24	; 0x15
 3d6:	83 89       	ldd	r24, Z+19	; 0x13
 3d8:	8e 8b       	std	Y+22, r24	; 0x16
 3da:	84 89       	ldd	r24, Z+20	; 0x14
 3dc:	8f 8b       	std	Y+23, r24	; 0x17
 3de:	85 89       	ldd	r24, Z+21	; 0x15
 3e0:	88 8f       	std	Y+24, r24	; 0x18
 3e2:	86 89       	ldd	r24, Z+22	; 0x16
 3e4:	89 8f       	std	Y+25, r24	; 0x19
 3e6:	87 89       	ldd	r24, Z+23	; 0x17
 3e8:	8a 8f       	std	Y+26, r24	; 0x1a
 3ea:	20 e0       	ldi	r18, 0x00	; 0
 3ec:	4a e1       	ldi	r20, 0x1A	; 26
 3ee:	be 01       	movw	r22, r28
 3f0:	6f 5f       	subi	r22, 0xFF	; 255
 3f2:	7f 4f       	sbci	r23, 0xFF	; 255
 3f4:	89 e6       	ldi	r24, 0x69	; 105
 3f6:	0e 94 73 02 	call	0x4e6	; 0x4e6 <i2c_controller_transmit>
 3fa:	6a 96       	adiw	r28, 0x1a	; 26
 3fc:	0f b6       	in	r0, 0x3f	; 63
 3fe:	f8 94       	cli
 400:	de bf       	out	0x3e, r29	; 62
 402:	0f be       	out	0x3f, r0	; 63
 404:	cd bf       	out	0x3d, r28	; 61
 406:	df 91       	pop	r29
 408:	cf 91       	pop	r28
 40a:	08 95       	ret

Disassembly of section .text.max_debugFuelGauge:

00000544 <max_debugFuelGauge>:
 544:	cf 93       	push	r28
 546:	df 93       	push	r29
 548:	cd b7       	in	r28, 0x3d	; 61
 54a:	de b7       	in	r29, 0x3e	; 62
 54c:	28 97       	sbiw	r28, 0x08	; 8
 54e:	0f b6       	in	r0, 0x3f	; 63
 550:	f8 94       	cli
 552:	de bf       	out	0x3e, r29	; 62
 554:	0f be       	out	0x3f, r0	; 63
 556:	cd bf       	out	0x3d, r28	; 61
 558:	8b eb       	ldi	r24, 0xBB	; 187
 55a:	89 83       	std	Y+1, r24	; 0x01
 55c:	8a ea       	ldi	r24, 0xAA	; 170
 55e:	8a 83       	std	Y+2, r24	; 0x02
 560:	85 e0       	ldi	r24, 0x05	; 5
 562:	0e 94 61 03 	call	0x6c2	; 0x6c2 <max_readRegister>
 566:	8b 83       	std	Y+3, r24	; 0x03
 568:	9c 83       	std	Y+4, r25	; 0x04
 56a:	80 e1       	ldi	r24, 0x10	; 16
 56c:	0e 94 61 03 	call	0x6c2	; 0x6c2 <max_readRegister>
 570:	8d 83       	std	Y+5, r24	; 0x05
 572:	9e 83       	std	Y+6, r25	; 0x06
 574:	81 e1       	ldi	r24, 0x11	; 17
 576:	0e 94 61 03 	call	0x6c2	; 0x6c2 <max_readRegister>
 57a:	8f 83       	std	Y+7, r24	; 0x07
 57c:	98 87       	std	Y+8, r25	; 0x08
 57e:	20 e0       	ldi	r18, 0x00	; 0
 580:	48 e0       	ldi	r20, 0x08	; 8
 582:	be 01       	movw	r22, r28
 584:	6f 5f       	subi	r22, 0xFF	; 255
 586:	7f 4f       	sbci	r23, 0xFF	; 255
 588:	89 e6       	ldi	r24, 0x69	; 105
 58a:	0e 94 73 02 	call	0x4e6	; 0x4e6 <i2c_controller_transmit>
 58e:	28 96       	adiw	r28, 0x08	; 8
 590:	0f b6       	in	r0, 0x3f	; 63
 592:	f8 94       	cli
 594:	de bf       	out	0x3e, r29	; 62
 596:	0f be       	out	0x3f, r0	; 63
 598:	cd bf       	out	0x3d, r28	; 61
 59a:	df 91       	pop	r29
 59c:	cf 91       	pop	r28
 59e:	08 95       	ret

Disassembly of section .text.max_debugEEPROM:

000002ce <max_debugEEPROM>:
 2ce:	cf 93       	push	r28
 2d0:	df 93       	push	r29
 2d2:	cd b7       	in	r28, 0x3d	; 61
 2d4:	de b7       	in	r29, 0x3e	; 62
 2d6:	66 97       	sbiw	r28, 0x16	; 22
 2d8:	0f b6       	in	r0, 0x3f	; 63
 2da:	f8 94       	cli
 2dc:	de bf       	out	0x3e, r29	; 62
 2de:	0f be       	out	0x3f, r0	; 63
 2e0:	cd bf       	out	0x3d, r28	; 61
 2e2:	8d ed       	ldi	r24, 0xDD	; 221
 2e4:	89 83       	std	Y+1, r24	; 0x01
 2e6:	8a 83       	std	Y+2, r24	; 0x02
 2e8:	62 e0       	ldi	r22, 0x02	; 2
 2ea:	70 e0       	ldi	r23, 0x00	; 0
 2ec:	80 e8       	ldi	r24, 0x80	; 128
 2ee:	0e 94 a9 04 	call	0x952	; 0x952 <eeprom_read_word>
 2f2:	22 e0       	ldi	r18, 0x02	; 2
 2f4:	2b 83       	std	Y+3, r18	; 0x03
 2f6:	1c 82       	std	Y+4, r1	; 0x04
 2f8:	8d 83       	std	Y+5, r24	; 0x05
 2fa:	9e 83       	std	Y+6, r25	; 0x06
 2fc:	64 e0       	ldi	r22, 0x04	; 4
 2fe:	70 e0       	ldi	r23, 0x00	; 0
 300:	80 e8       	ldi	r24, 0x80	; 128
 302:	0e 94 a9 04 	call	0x952	; 0x952 <eeprom_read_word>
 306:	24 e0       	ldi	r18, 0x04	; 4
 308:	2f 83       	std	Y+7, r18	; 0x07
 30a:	18 86       	std	Y+8, r1	; 0x08
 30c:	89 87       	std	Y+9, r24	; 0x09
 30e:	9a 87       	std	Y+10, r25	; 0x0a
 310:	66 e0       	ldi	r22, 0x06	; 6
 312:	70 e0       	ldi	r23, 0x00	; 0
 314:	80 e8       	ldi	r24, 0x80	; 128
 316:	0e 94 a9 04 	call	0x952	; 0x952 <eeprom_read_word>
 31a:	26 e0       	ldi	r18, 0x06	; 6
 31c:	2b 87       	std	Y+11, r18	; 0x0b
 31e:	1c 86       	std	Y+12, r1	; 0x0c
 320:	8d 87       	std	Y+13, r24	; 0x0d
 322:	9e 87       	std	Y+14, r25	; 0x0e
 324:	68 e0       	ldi	r22, 0x08	; 8
 326:	70 e0       	ldi	r23, 0x00	; 0
 328:	80 e8       	ldi	r24, 0x80	; 128
 32a:	0e 94 a9 04 	call	0x952	; 0x952 <eeprom_read_word>
 32e:	28 e0       	ldi	r18, 0x08	; 8
 330:	2f 87       	std	Y+15, r18	; 0x0f
 332:	18 8a       	std	Y+16, r1	; 0x10
 334:	89 8b       	std	Y+17, r24	; 0x11
 336:	9a 8b       	std	Y+18, r25	; 0x12
 338:	6a e0       	ldi	r22, 0x0A	; 10
 33a:	70 e0       	ldi	r23, 0x00	; 0
 33c:	80 e8       	ldi	r24, 0x80	; 128
 33e:	0e 94 a9 04 	call	0x952	; 0x952 <eeprom_read_word>
 342:	2a e0       	ldi	r18, 0x0A	; 10
 344:	2b 8b       	std	Y+19, r18	; 0x13
 346:	1c 8a       	std	Y+20, r1	; 0x14
 348:	8d 8b       	std	Y+21, r24	; 0x15
 34a:	9e 8b       	std	Y+22, r25	; 0x16
 34c:	20 e0       	ldi	r18, 0x00	; 0
 34e:	46 e1       	ldi	r20, 0x16	; 22
 350:	be 01       	movw	r22, r28
 352:	6f 5f       	subi	r22, 0xFF	; 255
 354:	7f 4f       	sbci	r23, 0xFF	; 255
 356:	89 e6       	ldi	r24, 0x69	; 105
 358:	0e 94 73 02 	call	0x4e6	; 0x4e6 <i2c_controller_transmit>
 35c:	66 96       	adiw	r28, 0x16	; 22
 35e:	0f b6       	in	r0, 0x3f	; 63
 360:	f8 94       	cli
 362:	de bf       	out	0x3e, r29	; 62
 364:	0f be       	out	0x3f, r0	; 63
 366:	cd bf       	out	0x3d, r28	; 61
 368:	df 91       	pop	r29
 36a:	cf 91       	pop	r28
 36c:	08 95       	ret

Disassembly of section .text.max_checkPOR:

00000960 <max_checkPOR>:
 *
 * @returns : POR bit state
 *
 ***********************************************************/
uint16_t max_checkPOR(void) {
	return (max_readRegister(Status_ADDR) & POR);	// return state of por bit in status reg
 960:	80 e0       	ldi	r24, 0x00	; 0
 962:	0e 94 61 03 	call	0x6c2	; 0x6c2 <max_readRegister>
}
 966:	82 70       	andi	r24, 0x02	; 2
 968:	99 27       	eor	r25, r25
 96a:	08 95       	ret

Disassembly of section .text.max_initLED:

0000090c <max_initLED>:
	// disable custom led control
	max_writeRegister(CustLED_ADDR, CustLED_DEF);
	max_writeRegister(LEDCfg3_ADDR, LEDCfg3_DEF);
	
	_delay_ms(1000);
}
 90c:	64 e7       	ldi	r22, 0x74	; 116
 90e:	70 e6       	ldi	r23, 0x60	; 96
 910:	80 e4       	ldi	r24, 0x40	; 64
 912:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <max_writeRegister>
 916:	6f e1       	ldi	r22, 0x1F	; 31
 918:	71 e0       	ldi	r23, 0x01	; 1
 91a:	8b e4       	ldi	r24, 0x4B	; 75
 91c:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <max_writeRegister>
 920:	60 e0       	ldi	r22, 0x00	; 0
 922:	70 e8       	ldi	r23, 0x80	; 128
 924:	87 e3       	ldi	r24, 0x37	; 55
 926:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <max_writeRegister>
 92a:	08 95       	ret

Disassembly of section .text.max_readFuelGauge:

000007e0 <max_readFuelGauge>:
 7e0:	cf 93       	push	r28
 7e2:	df 93       	push	r29
 7e4:	ec 01       	movw	r28, r24
 7e6:	85 e0       	ldi	r24, 0x05	; 5
 7e8:	0e 94 61 03 	call	0x6c2	; 0x6c2 <max_readRegister>
 7ec:	99 87       	std	Y+9, r25	; 0x09
 7ee:	88 87       	std	Y+8, r24	; 0x08
 7f0:	80 e1       	ldi	r24, 0x10	; 16
 7f2:	0e 94 61 03 	call	0x6c2	; 0x6c2 <max_readRegister>
 7f6:	9b 87       	std	Y+11, r25	; 0x0b
 7f8:	8a 87       	std	Y+10, r24	; 0x0a
 7fa:	81 e1       	ldi	r24, 0x11	; 17
 7fc:	0e 94 61 03 	call	0x6c2	; 0x6c2 <max_readRegister>
 800:	9d 87       	std	Y+13, r25	; 0x0d
 802:	8c 87       	std	Y+12, r24	; 0x0c
 804:	df 91       	pop	r29
 806:	cf 91       	pop	r28
 808:	08 95       	ret

Disassembly of section .text.max_checkCycles:

00000740 <max_checkCycles>:
 740:	0f 93       	push	r16
 742:	1f 93       	push	r17
 744:	cf 93       	push	r28
 746:	df 93       	push	r29
 748:	ec 01       	movw	r28, r24
 74a:	87 e1       	ldi	r24, 0x17	; 23
 74c:	0e 94 61 03 	call	0x6c2	; 0x6c2 <max_readRegister>
 750:	8c 01       	movw	r16, r24
 752:	67 e1       	ldi	r22, 0x17	; 23
 754:	89 e6       	ldi	r24, 0x69	; 105
 756:	0e 94 bf 03 	call	0x77e	; 0x77e <max_debugRead>
 75a:	8c 89       	ldd	r24, Y+20	; 0x14
 75c:	9d 89       	ldd	r25, Y+21	; 0x15
 75e:	80 27       	eor	r24, r16
 760:	91 27       	eor	r25, r17
 762:	86 ff       	sbrs	r24, 6
 764:	04 c0       	rjmp	.+8      	; 0x76e <max_checkCycles+0x2e>
 766:	1d 8b       	std	Y+21, r17	; 0x15
 768:	0c 8b       	std	Y+20, r16	; 0x14
 76a:	81 e0       	ldi	r24, 0x01	; 1
 76c:	03 c0       	rjmp	.+6      	; 0x774 <max_checkCycles+0x34>
 76e:	1d 8b       	std	Y+21, r17	; 0x15
 770:	0c 8b       	std	Y+20, r16	; 0x14
 772:	80 e0       	ldi	r24, 0x00	; 0
 774:	df 91       	pop	r29
 776:	cf 91       	pop	r28
 778:	1f 91       	pop	r17
 77a:	0f 91       	pop	r16
 77c:	08 95       	ret

Disassembly of section .text.max_eepromSaveParameters:

000005f2 <max_eepromSaveParameters>:
 5f2:	cf 93       	push	r28
 5f4:	df 93       	push	r29
 5f6:	ec 01       	movw	r28, r24
 5f8:	6e 85       	ldd	r22, Y+14	; 0x0e
 5fa:	7f 85       	ldd	r23, Y+15	; 0x0f
 5fc:	82 e0       	ldi	r24, 0x02	; 2
 5fe:	90 e0       	ldi	r25, 0x00	; 0
 600:	0e 94 b6 04 	call	0x96c	; 0x96c <eeprom_update_word>
 604:	68 89       	ldd	r22, Y+16	; 0x10
 606:	79 89       	ldd	r23, Y+17	; 0x11
 608:	84 e0       	ldi	r24, 0x04	; 4
 60a:	90 e0       	ldi	r25, 0x00	; 0
 60c:	0e 94 b6 04 	call	0x96c	; 0x96c <eeprom_update_word>
 610:	6a 89       	ldd	r22, Y+18	; 0x12
 612:	7b 89       	ldd	r23, Y+19	; 0x13
 614:	86 e0       	ldi	r24, 0x06	; 6
 616:	90 e0       	ldi	r25, 0x00	; 0
 618:	0e 94 b6 04 	call	0x96c	; 0x96c <eeprom_update_word>
 61c:	6c 89       	ldd	r22, Y+20	; 0x14
 61e:	7d 89       	ldd	r23, Y+21	; 0x15
 620:	88 e0       	ldi	r24, 0x08	; 8
 622:	90 e0       	ldi	r25, 0x00	; 0
 624:	0e 94 b6 04 	call	0x96c	; 0x96c <eeprom_update_word>
 628:	6e 89       	ldd	r22, Y+22	; 0x16
 62a:	7f 89       	ldd	r23, Y+23	; 0x17
 62c:	8a e0       	ldi	r24, 0x0A	; 10
 62e:	90 e0       	ldi	r25, 0x00	; 0
 630:	0e 94 b6 04 	call	0x96c	; 0x96c <eeprom_update_word>
 634:	df 91       	pop	r29
 636:	cf 91       	pop	r28
 638:	08 95       	ret

Disassembly of section .text.max_saveLearnedParameters:

0000063a <max_saveLearnedParameters>:
 63a:	cf 93       	push	r28
 63c:	df 93       	push	r29
 63e:	ec 01       	movw	r28, r24
 640:	88 e3       	ldi	r24, 0x38	; 56
 642:	0e 94 61 03 	call	0x6c2	; 0x6c2 <max_readRegister>
 646:	9f 87       	std	Y+15, r25	; 0x0f
 648:	8e 87       	std	Y+14, r24	; 0x0e
 64a:	89 e3       	ldi	r24, 0x39	; 57
 64c:	0e 94 61 03 	call	0x6c2	; 0x6c2 <max_readRegister>
 650:	99 8b       	std	Y+17, r25	; 0x11
 652:	88 8b       	std	Y+16, r24	; 0x10
 654:	80 e1       	ldi	r24, 0x10	; 16
 656:	0e 94 61 03 	call	0x6c2	; 0x6c2 <max_readRegister>
 65a:	9b 8b       	std	Y+19, r25	; 0x13
 65c:	8a 8b       	std	Y+18, r24	; 0x12
 65e:	87 e1       	ldi	r24, 0x17	; 23
 660:	0e 94 61 03 	call	0x6c2	; 0x6c2 <max_readRegister>
 664:	9d 8b       	std	Y+21, r25	; 0x15
 666:	8c 8b       	std	Y+20, r24	; 0x14
 668:	83 e2       	ldi	r24, 0x23	; 35
 66a:	0e 94 61 03 	call	0x6c2	; 0x6c2 <max_readRegister>
 66e:	9f 8b       	std	Y+23, r25	; 0x17
 670:	8e 8b       	std	Y+22, r24	; 0x16
 672:	ce 01       	movw	r24, r28
 674:	0e 94 f9 02 	call	0x5f2	; 0x5f2 <max_eepromSaveParameters>
 678:	df 91       	pop	r29
 67a:	cf 91       	pop	r28
 67c:	08 95       	ret

Disassembly of section .text.max_eepromLoadParameters:

000005a0 <max_eepromLoadParameters>:
 5a0:	cf 93       	push	r28
 5a2:	df 93       	push	r29
 5a4:	ec 01       	movw	r28, r24
 5a6:	62 e0       	ldi	r22, 0x02	; 2
 5a8:	70 e0       	ldi	r23, 0x00	; 0
 5aa:	80 e8       	ldi	r24, 0x80	; 128
 5ac:	0e 94 a9 04 	call	0x952	; 0x952 <eeprom_read_word>
 5b0:	9f 87       	std	Y+15, r25	; 0x0f
 5b2:	8e 87       	std	Y+14, r24	; 0x0e
 5b4:	64 e0       	ldi	r22, 0x04	; 4
 5b6:	70 e0       	ldi	r23, 0x00	; 0
 5b8:	80 e8       	ldi	r24, 0x80	; 128
 5ba:	0e 94 a9 04 	call	0x952	; 0x952 <eeprom_read_word>
 5be:	99 8b       	std	Y+17, r25	; 0x11
 5c0:	88 8b       	std	Y+16, r24	; 0x10
 5c2:	66 e0       	ldi	r22, 0x06	; 6
 5c4:	70 e0       	ldi	r23, 0x00	; 0
 5c6:	80 e8       	ldi	r24, 0x80	; 128
 5c8:	0e 94 a9 04 	call	0x952	; 0x952 <eeprom_read_word>
 5cc:	9b 8b       	std	Y+19, r25	; 0x13
 5ce:	8a 8b       	std	Y+18, r24	; 0x12
 5d0:	68 e0       	ldi	r22, 0x08	; 8
 5d2:	70 e0       	ldi	r23, 0x00	; 0
 5d4:	80 e8       	ldi	r24, 0x80	; 128
 5d6:	0e 94 a9 04 	call	0x952	; 0x952 <eeprom_read_word>
 5da:	9d 8b       	std	Y+21, r25	; 0x15
 5dc:	8c 8b       	std	Y+20, r24	; 0x14
 5de:	6a e0       	ldi	r22, 0x0A	; 10
 5e0:	70 e0       	ldi	r23, 0x00	; 0
 5e2:	80 e8       	ldi	r24, 0x80	; 128
 5e4:	0e 94 a9 04 	call	0x952	; 0x952 <eeprom_read_word>
 5e8:	9f 8b       	std	Y+23, r25	; 0x17
 5ea:	8e 8b       	std	Y+22, r24	; 0x16
 5ec:	df 91       	pop	r29
 5ee:	cf 91       	pop	r28
 5f0:	08 95       	ret

Disassembly of section .text.max_loadConfig:

000000c4 <max_loadConfig>:
  c4:	ff 92       	push	r15
  c6:	0f 93       	push	r16
  c8:	1f 93       	push	r17
  ca:	cf 93       	push	r28
  cc:	df 93       	push	r29
  ce:	ec 01       	movw	r28, r24
  d0:	6b eb       	ldi	r22, 0xBB	; 187
  d2:	7b eb       	ldi	r23, 0xBB	; 187
  d4:	89 e6       	ldi	r24, 0x69	; 105
  d6:	0e 94 3f 04 	call	0x87e	; 0x87e <max_debugWrite>
  da:	60 e0       	ldi	r22, 0x00	; 0
  dc:	70 e0       	ldi	r23, 0x00	; 0
  de:	80 e0       	ldi	r24, 0x00	; 0
  e0:	0e 94 a9 04 	call	0x952	; 0x952 <eeprom_read_word>
  e4:	8f 3e       	cpi	r24, 0xEF	; 239
  e6:	9e 4b       	sbci	r25, 0xBE	; 190
  e8:	11 f4       	brne	.+4      	; 0xee <max_loadConfig+0x2a>
  ea:	f1 2c       	mov	r15, r1
  ec:	09 c0       	rjmp	.+18     	; 0x100 <max_loadConfig+0x3c>
  ee:	ff 24       	eor	r15, r15
  f0:	f3 94       	inc	r15
  f2:	06 c0       	rjmp	.+12     	; 0x100 <max_loadConfig+0x3c>
  f4:	8f e1       	ldi	r24, 0x1F	; 31
  f6:	9e e4       	ldi	r25, 0x4E	; 78
  f8:	01 97       	sbiw	r24, 0x01	; 1
  fa:	f1 f7       	brne	.-4      	; 0xf8 <max_loadConfig+0x34>
  fc:	00 c0       	rjmp	.+0      	; 0xfe <max_loadConfig+0x3a>
  fe:	00 00       	nop
 100:	8d e3       	ldi	r24, 0x3D	; 61
 102:	0e 94 61 03 	call	0x6c2	; 0x6c2 <max_readRegister>
 106:	80 fd       	sbrc	r24, 0
 108:	f5 cf       	rjmp	.-22     	; 0xf4 <max_loadConfig+0x30>
 10a:	8a eb       	ldi	r24, 0xBA	; 186
 10c:	0e 94 61 03 	call	0x6c2	; 0x6c2 <max_readRegister>
 110:	8c 01       	movw	r16, r24
 112:	60 e0       	ldi	r22, 0x00	; 0
 114:	70 e0       	ldi	r23, 0x00	; 0
 116:	80 e6       	ldi	r24, 0x60	; 96
 118:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <max_writeRegister>
 11c:	60 e0       	ldi	r22, 0x00	; 0
 11e:	70 e0       	ldi	r23, 0x00	; 0
 120:	8a eb       	ldi	r24, 0xBA	; 186
 122:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <max_writeRegister>
 126:	60 e9       	ldi	r22, 0x90	; 144
 128:	70 e0       	ldi	r23, 0x00	; 0
 12a:	80 e6       	ldi	r24, 0x60	; 96
 12c:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <max_writeRegister>
 130:	68 81       	ld	r22, Y
 132:	79 81       	ldd	r23, Y+1	; 0x01
 134:	88 e1       	ldi	r24, 0x18	; 24
 136:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <max_writeRegister>
 13a:	6a 81       	ldd	r22, Y+2	; 0x02
 13c:	7b 81       	ldd	r23, Y+3	; 0x03
 13e:	8e e1       	ldi	r24, 0x1E	; 30
 140:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <max_writeRegister>
 144:	6c 81       	ldd	r22, Y+4	; 0x04
 146:	7d 81       	ldd	r23, Y+5	; 0x05
 148:	8a e3       	ldi	r24, 0x3A	; 58
 14a:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <max_writeRegister>
 14e:	6e 81       	ldd	r22, Y+6	; 0x06
 150:	7f 81       	ldd	r23, Y+7	; 0x07
 152:	8b ed       	ldi	r24, 0xDB	; 219
 154:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <max_writeRegister>
 158:	06 c0       	rjmp	.+12     	; 0x166 <max_loadConfig+0xa2>
 15a:	8f e1       	ldi	r24, 0x1F	; 31
 15c:	9e e4       	ldi	r25, 0x4E	; 78
 15e:	01 97       	sbiw	r24, 0x01	; 1
 160:	f1 f7       	brne	.-4      	; 0x15e <max_loadConfig+0x9a>
 162:	00 c0       	rjmp	.+0      	; 0x164 <max_loadConfig+0xa0>
 164:	00 00       	nop
 166:	8b ed       	ldi	r24, 0xDB	; 219
 168:	0e 94 61 03 	call	0x6c2	; 0x6c2 <max_readRegister>
 16c:	99 23       	and	r25, r25
 16e:	ac f3       	brlt	.-22     	; 0x15a <max_loadConfig+0x96>
 170:	ff 20       	and	r15, r15
 172:	b1 f0       	breq	.+44     	; 0x1a0 <max_loadConfig+0xdc>
 174:	88 e3       	ldi	r24, 0x38	; 56
 176:	0e 94 61 03 	call	0x6c2	; 0x6c2 <max_readRegister>
 17a:	9f 87       	std	Y+15, r25	; 0x0f
 17c:	8e 87       	std	Y+14, r24	; 0x0e
 17e:	89 e3       	ldi	r24, 0x39	; 57
 180:	0e 94 61 03 	call	0x6c2	; 0x6c2 <max_readRegister>
 184:	99 8b       	std	Y+17, r25	; 0x11
 186:	88 8b       	std	Y+16, r24	; 0x10
 188:	88 81       	ld	r24, Y
 18a:	99 81       	ldd	r25, Y+1	; 0x01
 18c:	9b 8b       	std	Y+19, r25	; 0x13
 18e:	8a 8b       	std	Y+18, r24	; 0x12
 190:	1d 8a       	std	Y+21, r1	; 0x15
 192:	1c 8a       	std	Y+20, r1	; 0x14
 194:	9f 8b       	std	Y+23, r25	; 0x17
 196:	8e 8b       	std	Y+22, r24	; 0x16
 198:	ce 01       	movw	r24, r28
 19a:	0e 94 f9 02 	call	0x5f2	; 0x5f2 <max_eepromSaveParameters>
 19e:	03 c0       	rjmp	.+6      	; 0x1a6 <max_loadConfig+0xe2>
 1a0:	ce 01       	movw	r24, r28
 1a2:	0e 94 d0 02 	call	0x5a0	; 0x5a0 <max_eepromLoadParameters>
 1a6:	6e 85       	ldd	r22, Y+14	; 0x0e
 1a8:	7f 85       	ldd	r23, Y+15	; 0x0f
 1aa:	88 e3       	ldi	r24, 0x38	; 56
 1ac:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <max_writeRegister>
 1b0:	68 89       	ldd	r22, Y+16	; 0x10
 1b2:	79 89       	ldd	r23, Y+17	; 0x11
 1b4:	89 e3       	ldi	r24, 0x39	; 57
 1b6:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <max_writeRegister>
 1ba:	6a 89       	ldd	r22, Y+18	; 0x12
 1bc:	7b 89       	ldd	r23, Y+19	; 0x13
 1be:	80 e1       	ldi	r24, 0x10	; 16
 1c0:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <max_writeRegister>
 1c4:	6c 89       	ldd	r22, Y+20	; 0x14
 1c6:	7d 89       	ldd	r23, Y+21	; 0x15
 1c8:	87 e1       	ldi	r24, 0x17	; 23
 1ca:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <max_writeRegister>
 1ce:	6e 89       	ldd	r22, Y+22	; 0x16
 1d0:	7f 89       	ldd	r23, Y+23	; 0x17
 1d2:	83 e2       	ldi	r24, 0x23	; 35
 1d4:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <max_writeRegister>
 1d8:	b8 01       	movw	r22, r16
 1da:	8a eb       	ldi	r24, 0xBA	; 186
 1dc:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <max_writeRegister>
 1e0:	0e 94 86 04 	call	0x90c	; 0x90c <max_initLED>
 1e4:	80 e0       	ldi	r24, 0x00	; 0
 1e6:	0e 94 61 03 	call	0x6c2	; 0x6c2 <max_readRegister>
 1ea:	bc 01       	movw	r22, r24
 1ec:	6d 7f       	andi	r22, 0xFD	; 253
 1ee:	80 e0       	ldi	r24, 0x00	; 0
 1f0:	0e 94 81 03 	call	0x702	; 0x702 <max_writeAndVerifyRegister>
 1f4:	df 91       	pop	r29
 1f6:	cf 91       	pop	r28
 1f8:	1f 91       	pop	r17
 1fa:	0f 91       	pop	r16
 1fc:	ff 90       	pop	r15
 1fe:	08 95       	ret

Disassembly of section .text.libgcc.div:

0000067e <__udivmodsi4>:
 67e:	a1 e2       	ldi	r26, 0x21	; 33
 680:	1a 2e       	mov	r1, r26
 682:	aa 1b       	sub	r26, r26
 684:	bb 1b       	sub	r27, r27
 686:	fd 01       	movw	r30, r26
 688:	0d c0       	rjmp	.+26     	; 0x6a4 <__udivmodsi4_ep>

0000068a <__udivmodsi4_loop>:
 68a:	aa 1f       	adc	r26, r26
 68c:	bb 1f       	adc	r27, r27
 68e:	ee 1f       	adc	r30, r30
 690:	ff 1f       	adc	r31, r31
 692:	a2 17       	cp	r26, r18
 694:	b3 07       	cpc	r27, r19
 696:	e4 07       	cpc	r30, r20
 698:	f5 07       	cpc	r31, r21
 69a:	20 f0       	brcs	.+8      	; 0x6a4 <__udivmodsi4_ep>
 69c:	a2 1b       	sub	r26, r18
 69e:	b3 0b       	sbc	r27, r19
 6a0:	e4 0b       	sbc	r30, r20
 6a2:	f5 0b       	sbc	r31, r21

000006a4 <__udivmodsi4_ep>:
 6a4:	66 1f       	adc	r22, r22
 6a6:	77 1f       	adc	r23, r23
 6a8:	88 1f       	adc	r24, r24
 6aa:	99 1f       	adc	r25, r25
 6ac:	1a 94       	dec	r1
 6ae:	69 f7       	brne	.-38     	; 0x68a <__udivmodsi4_loop>
 6b0:	60 95       	com	r22
 6b2:	70 95       	com	r23
 6b4:	80 95       	com	r24
 6b6:	90 95       	com	r25
 6b8:	9b 01       	movw	r18, r22
 6ba:	ac 01       	movw	r20, r24
 6bc:	bd 01       	movw	r22, r26
 6be:	cf 01       	movw	r24, r30
 6c0:	08 95       	ret

Disassembly of section .text.__dummy_fini:

00000980 <_fini>:
 980:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

00000982 <__funcs_on_exit>:
 982:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

00000984 <__simulator_exit>:
 984:	08 95       	ret

Disassembly of section .text.exit:

0000092c <exit>:
 92c:	ec 01       	movw	r28, r24
 92e:	0e 94 c1 04 	call	0x982	; 0x982 <__funcs_on_exit>
 932:	0e 94 c0 04 	call	0x980	; 0x980 <_fini>
 936:	ce 01       	movw	r24, r28
 938:	0e 94 c2 04 	call	0x984	; 0x984 <__simulator_exit>
 93c:	ce 01       	movw	r24, r28
 93e:	0e 94 be 04 	call	0x97c	; 0x97c <_Exit>

Disassembly of section .text._Exit:

0000097c <_Exit>:
 97c:	0e 94 60 00 	call	0xc0	; 0xc0 <_exit>

Disassembly of section .text.avrlibc:

00000952 <eeprom_read_word>:
 952:	cb 01       	movw	r24, r22
 954:	a8 e1       	ldi	r26, 0x18	; 24
 956:	b0 e0       	ldi	r27, 0x00	; 0
 958:	42 e0       	ldi	r20, 0x02	; 2
 95a:	50 e0       	ldi	r21, 0x00	; 0
 95c:	0c 94 56 04 	jmp	0x8ac	; 0x8ac <eeprom_read_blraw>

Disassembly of section .text.avrlibc:

0000096c <eeprom_update_word>:
 96c:	01 96       	adiw	r24, 0x01	; 1
 96e:	27 2f       	mov	r18, r23
 970:	0e 94 65 04 	call	0x8ca	; 0x8ca <eeprom_update_r18>
 974:	0c 94 64 04 	jmp	0x8c8	; 0x8c8 <eeprom_update_byte>

Disassembly of section .text.avrlibc:

000008a4 <eeprom_read_block>:
 8a4:	ba 01       	movw	r22, r20
 8a6:	a9 01       	movw	r20, r18
 8a8:	dc 01       	movw	r26, r24
 8aa:	cb 01       	movw	r24, r22

000008ac <eeprom_read_blraw>:
 8ac:	fc 01       	movw	r30, r24
 8ae:	f9 99       	sbic	0x1f, 1	; 31
 8b0:	fe cf       	rjmp	.-4      	; 0x8ae <eeprom_read_blraw+0x2>
 8b2:	06 c0       	rjmp	.+12     	; 0x8c0 <eeprom_read_blraw+0x14>
 8b4:	f2 bd       	out	0x22, r31	; 34
 8b6:	e1 bd       	out	0x21, r30	; 33
 8b8:	f8 9a       	sbi	0x1f, 0	; 31
 8ba:	31 96       	adiw	r30, 0x01	; 1
 8bc:	00 b4       	in	r0, 0x20	; 32
 8be:	0d 92       	st	X+, r0
 8c0:	41 50       	subi	r20, 0x01	; 1
 8c2:	50 40       	sbci	r21, 0x00	; 0
 8c4:	b8 f7       	brcc	.-18     	; 0x8b4 <eeprom_read_blraw+0x8>
 8c6:	08 95       	ret

Disassembly of section .text.avrlibc:

000008c8 <eeprom_update_byte>:
 8c8:	26 2f       	mov	r18, r22

000008ca <eeprom_update_r18>:
 8ca:	f9 99       	sbic	0x1f, 1	; 31
 8cc:	fe cf       	rjmp	.-4      	; 0x8ca <eeprom_update_r18>
 8ce:	92 bd       	out	0x22, r25	; 34
 8d0:	81 bd       	out	0x21, r24	; 33
 8d2:	f8 9a       	sbi	0x1f, 0	; 31
 8d4:	01 97       	sbiw	r24, 0x01	; 1
 8d6:	00 b4       	in	r0, 0x20	; 32
 8d8:	02 16       	cp	r0, r18
 8da:	39 f0       	breq	.+14     	; 0x8ea <eeprom_update_r18+0x20>
 8dc:	1f ba       	out	0x1f, r1	; 31
 8de:	20 bd       	out	0x20, r18	; 32
 8e0:	0f b6       	in	r0, 0x3f	; 63
 8e2:	f8 94       	cli
 8e4:	fa 9a       	sbi	0x1f, 2	; 31
 8e6:	f9 9a       	sbi	0x1f, 1	; 31
 8e8:	0f be       	out	0x3f, r0	; 63
 8ea:	08 95       	ret
